.class public auto ansi beforefieldinit LaserAndGateEntity
       extends LaserTwoInputGate
       implements ILogicReciever
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class Segment segment,
                               int64 x,
                               int64 y,
                               int64 z,
                               uint16 cube,
                               uint8 'flags',
                               uint16 lValue) cil managed
  {
    // Code size       67 (0x43)
    .maxstack  10
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.6
    IL_0002:  ldc.i4     2
    IL_0007:  ldarg.2
    IL_0008:  ldarg.3
    IL_0009:  ldarg.s    z
    IL_000b:  ldarg.s    cube
    IL_000d:  ldarg.s    'flags'
    IL_000f:  ldarg.s    lValue
    IL_0011:  ldarg.1
    IL_0012:  call       instance void ['Assembly-CSharp']LaserTwoInputGate::.ctor(valuetype ['Assembly-CSharp']eSegmentEntity,
                                                                                    valuetype ['Assembly-CSharp']SpawnableObjectEnum,
                                                                                    int64,
                                                                                    int64,
                                                                                    int64,
                                                                                    uint16,
                                                                                    uint8,
                                                                                    uint16,
                                                                                    class ['Assembly-CSharp']Segment)
    IL_0042:  ret
  } // end of method LaserAndGateEntity::.ctor
    
  .method family hidebysig virtual instance uint8
          UpdateOutput(uint8 left,
		               uint8 right) cil managed
  {
    .maxstack 2
              ldarg.0
              ldfld      uint16 MachineEntity::mValue
              switch     (ANDGATE, DOWNMUL, UPMUL, MEMORY)
              
              br.s       ZERO
  
              // Returns the left input if both right and left inputs are the same, otherwise 0
    ANDGATE:  ldarg.1
              ldarg.2
              beq.s      NONZERO

       ZERO:  ldc.i4.0
              br.s       RET
              
    NONZERO:  ldarg.1
              br.s       RET
              
              // (left * right) / 255
    DOWNMUL:  ldarg.1
              ldarg.2
              mul
              ldc.i4     255
              div
              br.s       RET
              
              // If right == 0, 0; otherwise (left * 255) / right
      UPMUL:  ldarg.2
              brfalse.s  ZERO
              ldc.i4     255
              ldarg.1
              mul
              ldarg.2
              div
              br.s       RET
              
              // Keeps the current output as long as right is 0, otherwise left
     MEMORY:  ldarg.2
              ldc.i4.0
              bne.un.s   OUTPUT
              
              // Keep the current output
              ldarg.0
              ldfld      uint8 LaserLogicGate::mbOutput
              br.s       RET
              
              // Output the left input
     OUTPUT:  ldarg.1
    
	    RET:  ret
  } // end of method LaserTwoInputGate::UpdateOutput
  
} // end of class LaserAndGateEntity
